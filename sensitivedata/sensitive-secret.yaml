identity:
  userAssignedIdentities:
    "/subscriptions/<subscription_id>/resourcegroups/my-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/my-user": {}
  type: UserAssigned
properties:
  environmentId: "/subscriptions/<subscription_id>/resourceGroups/rg/providers/Microsoft.App/managedEnvironments/demokube"
  workloadProfileName: My-GP-01
  configuration:
    ingress:
      external: true
      targetPort: 3000
      customDomains:
      - name: www.my-name.com
        bindingType: SniEnabled
        certificateId: "/subscriptions/<subscription_id>/resourceGroups/rg/providers/Microsoft.App/managedEnvironments/demokube/certificates/my-certificate-for-my-name-dot-com"
      - name: www.my-other-name.com
        bindingType: SniEnabled
        certificateId: "/subscriptions/<subscription_id>/resourceGroups/rg/providers/Microsoft.App/managedEnvironments/demokube/certificates/my-certificate-for-my-other-name-dot-com"
      traffic:
      - weight: 100
        revisionName: testcontainerApp0-ab1234
        label: production
      ipSecurityRestrictions:
      - name: Allow work IP A subnet
        description: Allowing all IP's within the subnet below to access containerapp
        ipAddressRange: 192.168.1.1/32
        action: Allow
      - name: Allow work IP B subnet
        description: Allowing all IP's within the subnet below to access containerapp
        ipAddressRange: 192.168.1.1/8
        action: Allow
      stickySessions:
        affinity: sticky
      clientCertificateMode: accept
      corsPolicy:
        allowedOrigins:
        - https://a.test.com
        - https://b.test.com
        allowedMethods:
        - GET
        - POST
        allowedHeaders:
        - HEADER1
        - HEADER2
        exposeHeaders:
        - HEADER3
        - HEADER4
        maxAge: 1234
        allowCredentials: true
    dapr:
      enabled: true
      appPort: 3000
      appProtocol: http
      httpReadBufferSize: 30
      httpMaxRequestSize: 10
      logLevel: debug
      enableApiLogging: true
    maxInactiveRevisions: 10
    service:
      type: redis
  template:
    containers:
    - image: repo/testcontainerApp0:v1
      name: testcontainerApp0
      probes:
      - type: Liveness
        httpGet:
          path: "/health"
          port: 8080
          httpHeaders:
          - name: Custom-Header
            value: Awesome
        initialDelaySeconds: 3
        periodSeconds: 3
      volumeMounts:
      - mountPath: "/myempty"
        volumeName: myempty
      - mountPath: "/myfiles"
        volumeName: azure-files-volume
      - mountPath: "/mysecrets"
        volumeName: mysecrets
      env:
      - name: "non-secret-env-var"
        value: "non-secret env var value"
      - name: "secret-env-var"
        secretRef: "mysecret"
    initContainers:
    - image: repo/testcontainerApp0:v4
      name: testinitcontainerApp0
      resources:
        cpu: 0.2
        memory: 100Mi
      command:
      - "/bin/sh"
      args:
      - "-c"
      - while true; do echo hello; sleep 10;done
      env:
      - name: "non-secret-env-var"
        value: "non-secret env var value"
      - name: "secret-env-var"
        secretRef: "mysecret"
    scale:
      minReplicas: 1
      maxReplicas: 5
      rules:
      - name: httpscalingrule
        custom:
          type: http
          metadata:
            concurrentRequests: '50'
    volumes:
    - name: myempty
      storageType: EmptyDir
    - name: azure-files-volume
      storageType: AzureFile
      storageName: myazurefiles
    - name: mysecrets
      storageType: Secret
      secrets:
      - secretRef: mysecret
        path: mysecret.txt
    serviceBinds:
    - serviceId: "/subscriptions/<subscription_id>/resourceGroups/rg/providers/Microsoft.App/containerApps/redisService"
      name: redisService
